buildscript {
    repositories {
        maven {
            name 'glide-snapshot'
            url 'https://oss.sonatype.org/content/repositories/snapshots'
        }
        maven {
            name 'fabric'
            url 'https://maven.fabric.io/public'
        }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.29.0'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.android.gms.oss-licenses-plugin'
apply plugin: 'io.fabric'

android {
    lintOptions {
        abortOnError false
    }
    signingConfigs {
        release
    }
    compileSdkVersion 29
    defaultConfig {
        applicationId "org.gophillygo.app"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 19
        versionName "1.2.5"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dataBinding {
        enabled = true
    }
    aaptOptions {
        cruncherEnabled = false
    }
    productFlavors {
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Firebase
    implementation 'com.google.firebase:firebase-core:17.2.2'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    // ViewModel and LiveData
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    // Java8 support for Lifecycles
    implementation 'androidx.lifecycle:lifecycle-common-java8:2.2.0'

    // Room
    implementation 'androidx.room:room-runtime:2.2.3'
    annotationProcessor 'androidx.room:room-compiler:2.2.3'

    // Android UI libraries
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "androidx.preference:preference:1.1.0"

    // Android Play services libraries
    implementation "com.google.android.gms:play-services-location:17.0.0"
    implementation "com.google.android.gms:play-services-maps:17.0.0"

    // Android WorkManager
    implementation 'android.arch.work:work-runtime:1.0.1'

    // Carousel
    implementation 'com.synnapps:carouselview:0.1.5'

    // Badges
    implementation 'com.github.nekocode:Badge:2.0'

    // Glide
    implementation('com.github.bumptech.glide:glide:4.10.0-SNAPSHOT') {
        exclude group: "com.android.support"
    }
    implementation("com.github.bumptech.glide:recyclerview-integration:4.10.0-SNAPSHOT") {
        transitive = false
    }
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0-SNAPSHOT'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'

    // Gson converter for Retrofit
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'

    // Okio log interceptor
    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'

    // Dagger 2
    def daggerVersion = '2.15'
    implementation "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"
    implementation "com.google.dagger:dagger-android:$daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    // OSS licensing
    implementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    // testing
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // Test helpers for LiveData
    testImplementation 'androidx.arch.core:core-testing:2.1.0'

    // Test helpers for Room
    testImplementation 'androidx.room:room-testing:2.2.3'
}

if (project.file("release.properties").exists()) {
    def props = new Properties()
    props.load(new FileInputStream(project.file("release.properties")))
    android.signingConfigs.release.storeFile project.file(props.keyStore)
    android.signingConfigs.release.storePassword props.keyStorePassword
    android.signingConfigs.release.keyAlias props.keyAlias
    android.signingConfigs.release.keyPassword props.keyAliasPassword
} else {
    logger.info("release.properties signing configuration file not found in app directory")
}

